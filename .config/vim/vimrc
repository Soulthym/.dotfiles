set shell=/bin/bash           " required for use in non-POSIX compliant shells
set nocompatible              " be iMproved, required

call plug#begin('~/.config/vim/autorun/plugged')
Plug 'https://github.com/Konfekt/FastFold.git'
Plug 'https://github.com/yous/vim-open-color.git'
Plug 'https://github.com/vim-airline/vim-airline.git'
Plug 'https://github.com/vim-airline/vim-airline-themes.git'
Plug 'https://github.com/mbbill/undotree.git'
Plug 'https://github.com/skywind3000/asyncrun.vim.git'
call plug#end()

" === vimrc ===
set wildmenu
set mouse+=a
set splitright
set splitbelow
set number relativenumber
set nowrap
map <F10> :w! \| !./.compile.sh <c-r>%<CR>
" Use 24-bit (true-color) mode in Vim/Neovim when outside tmux or screen.
" If you're using tmux version 2.2 or later, you can remove the outermost $TMUX
" check and use tmux's 24-bit color support
" (http://sunaku.github.io/tmux-24bit-color.html#usage for more information.)
if empty($TMUX) && empty($STY)
  " See https://gist.github.com/XVilka/8346728.
  if $COLORTERM =~# 'truecolor' || $COLORTERM =~# '24bit'
    if has('termguicolors')
      " See :help xterm-true-color
      if $TERM =~# '^screen'
        let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
        let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
      endif
      set termguicolors
    endif
  endif
endif

" Search highlight
set hlsearch
nnoremap <silent> <Esc> :nohlsearch<Bar>:echo<CR>

" Folding
function! MyFoldText()
    let nl = v:foldend - v:foldstart + 1
    let header = getline(v:foldstart)
    "let tailer = substitute(getline(v:foldend - 1),"^ *","",1)
    "let txt = header . '{ ' . tailer .' }' . ' --- ' . nl . ' lines'
    let txt = header . ' --- ' . nl . ' lines'
    return txt
endfunction
set foldtext=MyFoldText()
set foldmethod=manual
set viewoptions-=options
autocmd BufWinLeave *.* mkview
autocmd BufWinEnter *.* silent loadview
nnoremap <silent> <Space> @=(foldlevel('.')?'za':"\<Space>")<CR>
vnoremap <Space> zf

colorscheme open-color
syntax on

let g:airline_theme='deus'
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1

" Undo-tree
nnoremap <S-U> :UndotreeToggle<cr>
" Put plugins and dictionaries in this dir (also on Windows)
let vimDir = '$HOME/.config/vim'
let &runtimepath.=','.vimDir

" Keep undo history across sessions by storing it in a file
if has('persistent_undo')
    let myUndoDir = expand(vimDir . '/.undodir')
    " Create dirs
    call system('mkdir ' . vimDir)
    call system('mkdir ' . myUndoDir)
    let &undodir = myUndoDir
    set undofile
endif

" Async run
let g:asyncrun_status = "stopped"
let g:airline_section_error = airline#section#create_right(['%{g:asyncrun_status}'])

set clipboard=unnamedplus

autocmd FileType python noremap <c-c> I#<Esc>

inoremap <S-Tab> <C-V><Tab>
autocmd FileType sh noremap <c-c> I#<Esc>

" === end of vimrc
let g:python3_host_prog = '/usr/bin/python3'  " Python 3
let g:python_host_prog = '/usr/bin/python3'  " Python 3

    autocmd FileType vim noremap <silent> <c-c> :s/^\(\s*\)\([^"]*\)$/\1" \2/<CR>
