set nocompatible            "Sweet VIM features
set shell=/bin/bash         "if using a non POSIX Compliant shell

syntax on                   "Syntax highlighting
filetype plugin on

" Put plugins and dictionaries in this dir (also on Windows)
let vimDir = '$HOME/.config/vim'
let &runtimepath.=','.vimDir

" undo history
if has('persistent_undo')
    let myUndoDir = expand(vimDir . '/.undodir')
    " Create dirs
    call system('mkdir ' . vimDir)
    call system('mkdir ' . myUndoDir)
    let &undodir = myUndoDir
    set undofile
endif

call plug#begin('~/.config/vim/autorun/plugged')
Plug 'soulthym/vim-focus-buffer'
Plug 'baskerville/vim-sxhkdrc'
call plug#end()

au! bufwritepost *.vim,vimrc source %

set wildmenu                    "helps with tab-completion
set nowrap                      "no line wraping
set incsearch                   "incremental highlighting
set omnifunc=syntaxcomplete#Complete

set tabstop=8                   "tab character's width
set softtabstop=0               
set shiftwidth=4
set expandtab
set autoindent
set smarttab

set hlsearch
nnoremap <silent> <BS> :nohlsearch<Bar>:echo<CR>

set background=dark
colorscheme pablo
set relativenumber
set number
set fileformat=unix
"X11 - Clipboard support (requires gvim instead of vim package under arch linux for the +clipboard compile option)
"zy zY zp and zP aren't mapped by default, perfect for actuall clipboard interactions!
nnoremap zy "+y
nnoremap zY "+Y
nnoremap zp "+p
nnoremap zP "+P
vnoremap zy "+y
vnoremap zY "+Y
vnoremap zp "+p
vnoremap zP "+P

filetype indent on
au BufNewFile,BufRead *.html
   \set filetype=html   |
   \set smartindent
nnoremap <silent> ]<Space> :<C-u>put =repeat(nr2char(10),v:count)<Bar>execute "'[-1"<CR>
nnoremap <silent> [<Space> :<C-u>put!=repeat(nr2char(10),v:count)<Bar>execute "']+1"<CR>

" TODO: Nested filetypes for syntax highlighting
"runtime! syntax/xml.vim
"unlet b:current_syntax
"syntax include @Python syntax/python.vim
"syntax region pythonCode  start=+<Python>+ keepend end=+/</Python>+  contains=@Python
nnoremap Q A
