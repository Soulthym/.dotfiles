set nocompatible            "Sweet VIM features
set shell=/bin/bash         "if using a non POSIX Compliant shell

syntax on                   "Syntax highlighting
filetype plugin on

" Put plugins and dictionaries in this dir (also on Windows)
let vimDir = '$HOME/.config/vim'
let &runtimepath.=','.vimDir

" undo history
if has('persistent_undo')
    let myUndoDir = expand(vimDir . '/.undodir')
    " Create dirs
    call system('mkdir ' . vimDir)
    call system('mkdir ' . myUndoDir)
    let &undodir = myUndoDir
    set undofile
endif

call plug#begin('~/.config/vim/autorun/plugged')
Plug 'soulthym/vim-focus-buffer'
Plug 'baskerville/vim-sxhkdrc'
"Plug 'flazz/vim-colorschemes'
Plug 'rafi/awesome-vim-colorschemes'
Plug 'vim-python/python-syntax'
call plug#end()

set background=dark

colorscheme OceanicNext
"colorscheme default
"set background=light
hi Normal ctermbg=235
hi Folded ctermbg=NONE ctermfg=6 cterm=NONE
"hi Normal ctermbg=NONE
"hi LineNr ctermbg=NONE 

au! bufwritepost *.vim,vimrc 
            \ source $MYVIMRC

set wildmenu                    "helps with tab-completion
set wildmode=longest:full,full
set nowrap                      "no line wraping
set omnifunc=syntaxcomplete#Complete

set tabstop=8                   "tab character's width
set softtabstop=0               
set shiftwidth=4
set expandtab
set autoindent
set smarttab

set incsearch                   "incremental highlighting
set hlsearch
nnoremap <silent> <BS> :nohlsearch<Bar>:echo<CR>

set relativenumber
set number
set fileformat=unix
set modeline " file specific tweeks
"X11 - Clipboard support (requires gvim instead of vim package under arch linux for the +clipboard compile option)
"zy zY zp and zP aren't mapped by default, perfect for actuall clipboard interactions!
nnoremap zy "+y
nnoremap zY "+Y
nnoremap zp "+p
nnoremap zP "+P
vnoremap zy "+y
vnoremap zY "+Y
vnoremap zp "+p
vnoremap zP "+P

filetype indent on
au BufNewFile,BufRead *.html
   \set filetype=html   |
   \set smartindent
nnoremap <silent> ]<Space> :<C-u>put =repeat(nr2char(10),v:count)<Bar>execute "'[-1"<CR>
nnoremap <silent> [<Space> :<C-u>put!=repeat(nr2char(10),v:count)<Bar>execute "']+1"<CR>

" TODO: Nested filetypes for syntax highlighting
"runtime! syntax/xml.vim
"unlet b:current_syntax
"syntax include @Python syntax/python.vim
"syntax region pythonCode  start=+<Python>+ keepend end=+/</Python>+  contains=@Python
nnoremap Q A

" Running code in a terminal window:
nmap <leader>p :botright vertical terminal ipython --no-autoindent<cr>
" Run a line
nmap <leader>l <Plug>(send-to-term-line)
" Run a <motion>
nmap <leader>r <Plug>(send-to-term)
" Run a visual selection
xmap <leader>r <Plug>(send-to-term)
nmap <leader><leader> mrvap<Plug>(send-to-term)`r

"Python syntax
let g:python_version_2 = 0
let b:python_version_2 = 0
let g:python_highlight_builtins = 1
let g:python_highlight_builtin_objs = 1
let g:python_highlight_builtin_types = 1
let g:python_highlight_builtin_funcs = 1
let g:python_highlight_builtin_funcs_kwarg = 1
let g:python_highlight_exceptions = 1
let g:python_highlight_string_formatting = 1
let g:python_highlight_string_format = 1
let g:python_highlight_string_templates = 1
let g:python_highlight_indent_errors = 1
let g:python_highlight_space_errors = 1
let g:python_highlight_doctests = 1
let g:python_highlight_func_calls = 1
let g:python_highlight_class_vars = 1
let g:python_highlight_operators = 1
let g:python_highlight_all = 1
let g:python_highlight_file_headers_as_comments = 1
let g:python_slow_sync = 1

" Visual inner column [https://stackoverflow.com/a/54686136/10264886]
nnoremap vic <C-v>iWmw{joO`woOmwoO}koO`w
